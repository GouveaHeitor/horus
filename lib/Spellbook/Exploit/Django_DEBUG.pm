package Spellbook::Exploit::Django_DEBUG {
    use strict;
    use warnings;
    use Spellbook::Core::UserAgent;
    use Spellbook::Helper::Generate_UUID;

    sub new {
        my ($self, $parameters) = @_;
        my ($help, $target, @results);

        Getopt::Long::GetOptionsFromArray (
            $parameters,
            "h|help"     => \$help,
            "t|target=s" => \$target
        );

        if ($target){
            if ($target !~ /^http(?:s)?:\/\//x){
                $target = "https://$target";
            }

            my $useragent = Spellbook::Core::UserAgent -> new();
            my @paths     = ("/genericpath", "/api/spellbook", "/api/v1/spellbook", "/admin/spellbook", "/admin/1");
            my @method    = ("get", "post");

            foreach my $payload (@paths) {
                foreach my $method (@method) {
                    my $response = $useragent -> $method ($target . $payload);

                    if ($response =~ /RuntimeError/) {
                        push @results, "$target has \"debug mode\" enabled! - [Method: $method]";
                    }
                }
            }

            return @results
        }

        if ($help) {
            return<<"EOT";

Exploit::Django_Debug
=======================
-h, --help     See this menu
-t, --target   Define a target";

EOT
        }

        return 0;
    }
}

1;