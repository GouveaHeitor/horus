package Spellbook::Exploit::Subdomain_Takeover {
    use strict;
    use warnings;
    use LWP::UserAgent;
    use Digest::MD5 qw(md5_hex);

    sub new {
        my ($self, $parameters) = @_;
        my ($help, $target, @results);

        Getopt::Long::GetOptionsFromArray (
            $parameters,
            "h|help"     => \$help,
            "t|target=s" => \$target
        );

        if ($target) {
            if ($target !~ /^http(s)?:\/\//) {
                $target = "http://$target";
            }

            my $useragent = LWP::UserAgent -> new (ssl_opts => { verify_hostname => 0 });
            my $request   = $useragent -> get($target);

            if (($request -> code() == 200) || $request -> code() == 404) {
                my %hashes = (
                    github    => "1eb970ce5a18bec7165f016df8238566",
                    heroku    => "387caa8a924c5f92496824494b929207",
                    rdstation => "595e88012a6521aae3e12cbebe76eb9e",
                    # wpengine  => "308be540e2821668fb15c42317b1a256",
                    # gitbook => "",
                );

                for (keys %hashes) {
                    if (md5_hex($request -> content()) eq $hashes{$_}) {
                        push @results, $target;
                    }
                }
            }

            return @results;
        }

        if ($help) {
            return "
                \rExploit::Subdomain_Takeover_Check
                \r==============
                \r-h, --help     See this menu
                \r-t, --target   Define a target\n\n";
        }
    }
}

1;