package Spellbook::Exploit::Subdomain_Takeover {
    use strict;
    use warnings;
    use Net::DNS;
    use Spellbook::Core::UserAgent;
    use Digest::MD5 qw(md5_hex);

    sub new {
        my ($self, $parameters) = @_;
        my ($help, $target, @results);

        my %service_fingerprints = (
            "68934a3e9455fa72420237eb05902327" => "cname.greatpages.com.br",
            "1eb970ce5a18bec7165f016df8238566" => "github.github.io",
            "387caa8a924c5f92496824494b929207" => "heroku.com",
            "595e88012a6521aae3e12cbebe76eb9e" => "pages.rdstation.com.br",
            "fdda6b9858b843b34663e01f0bcce558" => "hosting.gitbook.io",
            "6e3eb000e6dfd2ee60de7a9c53d33489" => "sslproxy.teamwork.com",
            "308be540e2821668fb15c42317b1a256" => "wpengine.com",
            "cb4c751c4bd5d73750c59db5621a6faa" => "shops.myshopify.com",
            "1d9896e6c6994806305469581db3bf1d" => "proxy-ssl.webflow.com",
            "a9de491af0529a118b4d456566c2b34a" => "sites.hubspot.net",
            "52822a49f5e0b29181fb66c744ff6b6e" => "wixdns.net",
        );

        Getopt::Long::GetOptionsFromArray(
            $parameters,
            "h|help"     => \$help,
            "t|target=s" => \$target
        );

        if ($help) {
            return <<"EOT";

Exploit::Subdomain_Takeover_Check
==============
-h, --help     See this menu
-t, --target   Define a target

EOT
        }

        return @results unless $target;

        $target =~ s/^http(s)?:\/\///x;

        my $resolv = Net::DNS::Resolver->new();
        my $reply = $resolv->search($target);

        return @results unless $reply;

        $target = "https://$target";

        foreach my $dns_resource ($reply->answer()) {
            next unless $dns_resource->can("cname");

            my $cname = $dns_resource->cname();

            while (my ($hash, $service) = each %service_fingerprints) {
                next unless $cname =~ m/$service/x;

                my $useragent = Spellbook::Core::UserAgent->new();
                my $response = $useragent->get($target);

                if ($response->code() == 200 || $response->code() == 404) {
                    my $content_hash = md5_hex($response->content());

                    if ($hash eq $content_hash) {
                        push @results, $target;
                        last;
                    }
                }
            }
        }

        return @results;
    }
}

1;